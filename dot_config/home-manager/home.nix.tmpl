{ config, pkgs, ... }:

{
  # Home Manager needs a bit of information about you and the
  # paths it should manage.
  home.username = "{{ .chezmoi.username }}";
  home.homeDirectory = "{{ .chezmoi.homeDir }}";

  # https://github.com/nix-community/home-manager/issues/432#issuecomment-434817038
  #programs.man.enable = false;
  #home.extraOutputsToInstall = [ "man" ];
  # https://github.com/nix-community/home-manager/issues/432#issuecomment-615841327
  home.sessionVariables = {
    LANG = "en_US.UTF-8";
  };

  # This value determines the Home Manager release that your
  # configuration is compatible with. This helps avoid breakage
  # when a new Home Manager release introduces backwards
  # incompatible changes.
  #
  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "23.05";

  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;

  {{- if or .needs_terminal .is_personal }}

  # Golang
  programs.go.enable = true;
  {{- end }}

  imports = [
    ./base.nix
    ./data.nix
    ./editor.nix
    ./help.nix
    {{- /* Packages destined for local boxes, e.g. laptops */ -}}
    {{- if or .needs_terminal .is_personal }}
    ./local.nix
    ./iac.nix
    ./python.nix
    ./rust.nix
    ./nodejs.nix
    {{- end }}
    {{- if .is_wsl }}
    ./wsl.nix
    {{- end }}
    ./network.nix
    ./nix.nix
    ./perf.nix
    ./security.nix
    ./space.nix
    {{- if .needs_terminal }}
    ./terminal.nix
    {{- end }}
    ./utils.nix
  ];
}
