# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
# https://tmuxcheatsheet.com/
# http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# https://devhints.io/tmux
# https://mdschreier.com/2018/03/01/tmux-logging-and-preserving-sessions/
# https://www.man7.org/linux/man-pages/man1/tmux.1.html

# Terminal Overrides {{{

# Might need to change this on systems that don't have the terminfo installed
# Check with find /usr/share/terminfo -type f -print | grep tmux
# tmux-256color instead of screen-256color enables italics
set-option -g default-terminal "tmux-256color"

# True color support
set-option -sa terminal-overrides ",xterm*:Tc"

# }}}
# Misc {{{

set-option -g mouse on
set-option -g history-limit 100000
set-option -g display-time 2000
# WSL issue https://github.com/microsoft/WSL/issues/5931
set-option -s escape-time 1
set-window-option -g aggressive-resize on

# On both makes tmux set the clipboard for the outside terminal, and allows applications
# inside tmux to set tmux's clipboard (adding a paste buffer)
set-option -g set-clipboard on

# Neovim recommends this feature on
set-option -g focus-events on

# }}}
# Title {{{

set-option -g set-titles on

# }}}
# Shorcuts {{{

# Override to non-regex searches with -text
bind-key -T copy-mode-vi ? command-prompt -p "(search up)" "send -X search-backward-text \"%%%\""
bind-key -T copy-mode-vi / command-prompt -p "(search down)" "send -X search-forward-text \"%%%\""

bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key | split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'
bind-key e set-window-option synchronize-panes
bind-key ] paste-buffer -p
bind-key r {
  source-file ~/.tmux.conf
  display "Config reloaded"
}
bind-key S-Left {
  swap-window -t -1
  select-window -t -1
}
bind-key S-Right {
  swap-window -t +1
  select-window -t +1
}

bind-key P {
  pipe-pane -o "exec cat >>$HOME/'tmux-#S-#P-#W.log'"
  display-message 'Toggled logging to $HOME/tmux-#S-#P-#W.log'
}

# }}}
# VI Mode {{{

set-option -g status-keys vi
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# }}}
# Index {{{

set-option -g renumber-windows on
set-window-option -g pane-base-index 1

# }}}
# Visual bell {{{

set-option -g visual-activity on
set-option -g visual-bell on
set-option -g visual-silence on
set-option -g bell-action any
set-window-option -g monitor-activity on

# }}}
# Statusbar {{{

set-option -g status-position top
set-option -g status-justify left
set-option -g status-left ''
set-option -g status-right '#(echo #{pane_current_path} | sed -E "s|$HOME|~|g")'
set-option -g status-right-length 80
set-option -g status-interval 2

# }}}
# Styles {{{

# Color list: https://jonasjacek.github.io/colors/
# Standard colors to use:
# Black = colour0
# Red = colour9
# White = colour15
# Blue = colour14
# Grey = colour7
# Dark Grey = colour235

# Modes

# When you go into copy mode
set-window-option -g mode-style fg=colour9,bg=colour7,bold

# }}}
# Imports {{{

# Only active when in a local terminal
if-shell 'test -z "$SSH_CLIENT"' {
  # Key bindings {{{

  # Modified from:
  # https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf#L350-L381

  # Settings to enable local/outer session (reset key bindings to default)
  bind-key -T off F12 {
    set-option -u prefix
    set-option -u key-table
    set-option -u status-style
    refresh-client -S
  }

  # Settings to disable local/outer session key bindings
  bind-key -T root F12 {
    set-option prefix None
    set-option key-table off
    set-option status-style dim
    if -F '#{pane_in_mode}' 'send-keys -X cancel'
    refresh-client -S
  }

  # }}}
}

# Remote SSH session specific config
if-shell 'test -n "$SSH_CLIENT"' {
  # Yank {{{

  # transfer copied text to attached terminal with yank
  bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'yank > #{pane_tty}'

  # transfer most-recently copied text to attached terminal with yank
  bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

  # transfer previously copied text (chosen from a menu) to attached terminal
  bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'

  # }}}
  # Statusbar {{{

  set-option -g status-position bottom

  # }}}
}

# Import here if in a newer tmux version to prevent double import
if-shell '[ $(echo "$TMUX_VERSION >= 3.1" | bc) = 1 ]' {
  if-shell '[ -f "${XDG_CONFIG_HOME}/tmux/local/tmux.conf" ]' {
    source-file "${XDG_CONFIG_HOME}/tmux/local/tmux.conf"
  }
}

# }}}

