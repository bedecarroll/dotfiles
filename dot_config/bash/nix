#!/usr/bin/env bash

# Import nix. If we aren't on a nix system just return as atuin etc won't be there
NIX_PATH="${NIX_PATH:+$NIX_PATH:}$HOME/.nix-defexpr/channels"
if [ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ]; then
  export NIX_PATH
  source "$HOME/.nix-profile/etc/profile.d/nix.sh"
elif [ -e "/nix/var/nix/profiles/default/etc/profile.d/nix.sh" ]; then
  export NIX_PATH
  source "/nix/var/nix/profiles/default/etc/profile.d/nix.sh"
elif [ ! -d "/nix/" ]; then
  return 233
fi

# Source nix completions
if [ -d "$HOME/.nix-profile/share/bash-completion" ]; then
  for COMPLETION in "$HOME/.nix-profile/share/bash-completion/completions/"*; do
    [[ -r "${COMPLETION}" ]] && source "${COMPLETION}"
  done
fi

# Atuin config, needs to be after nix
ATUIN_SESSION=$(atuin uuid)
export ATUIN_SESSION

_atuin_preexec() {
  local id
  id=$(atuin history start -- "$1")
  export ATUIN_HISTORY_ID="${id}"
}

_atuin_precmd() {
  local EXIT="$?"

  [[ -z "${ATUIN_HISTORY_ID}" ]] && return

  (RUST_LOG=error atuin history end --exit "${EXIT}" -- "${ATUIN_HISTORY_ID}" &) >/dev/null 2>&1
}

__atuin_history() {
  tput rmkx
  # shellcheck disable=SC2048,SC2086
  HISTORY="$(RUST_LOG=error atuin search $* -i -- "${READLINE_LINE}" 3>&1 1>&2 2>&3)"
  tput smkx

  READLINE_LINE=${HISTORY}
  READLINE_POINT=${#READLINE_LINE}
}

if [[ -n "${BLE_VERSION-}" ]]; then
  blehook PRECMD-+=_atuin_precmd
  blehook PREEXEC-+=_atuin_preexec
else
  precmd_functions+=(_atuin_precmd)
  preexec_functions+=(_atuin_preexec)
fi

# Wrap this in an interactive shell check so that when chezmoi runs it won't print a warning
if [[ $- == *i* ]]; then
  bind -x '"\C-r": __atuin_history'
  #bind -x '"\e[A": __atuin_history --shell-up-key-binding'
  #bind -x '"\eOA": __atuin_history --shell-up-key-binding'
fi

# Enable
eval "$(mise activate bash)"
