#!/usr/bin/env bash

{{ if eq .chezmoi.os "linux" -}}
# Set XDG just in case
XDG_CONFIG_HOME="$HOME/.config"
XDG_DATA_HOME="$HOME/.local/share"

# Create backup location
BACKUP_FILENAME="$(date --iso-8601=seconds).tar.gz"
BACKUP_DIR="${HOME}/backup"
mkdir -p "${BACKUP_DIR}"

# Backup locations
BACKUP_LOCS=(
  # chezmoi
  "${XDG_CONFIG_HOME}/chezmoi/chezmoi.toml"
  # bash
  "${XDG_CONFIG_HOME}/bash/local"
  "${XDG_DATA_HOME}/bash"
  # tmux
  "${XDG_CONFIG_HOME}/tmux/local"
  # vim
  # all of vim config for custom ftdetect, includes etc
  "${XDG_CONFIG_HOME}/vim"
  # undo/backup locations (in case there is some important stuff)
  "${XDG_DATA_HOME}/vim/undo"
  "${XDG_DATA_HOME}/vim/backup"
  # plugged in case local changes have been made
  "${XDG_DATA_HOME}/vim/plugged"
  # kitty
  "${XDG_CONFIG_HOME}/kitty/local"
  # ssh
  "${HOME}/.ssh/config"
  "${HOME}/.ssh/local/config"
  # git
  "${XDG_CONFIG_HOME}/git"
  # hg
  "${HOME}/.hgrc"
  # curl
  "${HOME}/.curlrc"
  # weechat
  "${XDG_CONFIG_HOME}/weechat"
  # znc
  "${HOME}/.znc"
)

# Add .local/bin scripts
# Ignore chezmoi binary and folders like FZF
for x in $(find "${HOME}/.local/bin/" -maxdepth 1 -type f ! -name chezmoi); do
  BACKUP_LOCS+=("${x}")
done

# Remove files/directories that can't be read
index=0
for x in "${BACKUP_LOCS[@]}"; do
  if [ ! -r "${x}" ]; then
    unset BACKUP_LOCS[$index]
  fi
  let index++
done

# Use #/ to replace leading / for tar with parameter expansion
echo "Backing up local customizations"
tar -C / --ignore-failed-read --exclude-vcs --create --gzip --file="${BACKUP_DIR}/${BACKUP_FILENAME}" "${BACKUP_LOCS[@]#/}"

echo "Backup created at ${BACKUP_DIR}/${BACKUP_FILENAME}"

# Remove any more than 5 backups (oldest removed first)
# https://stackoverflow.com/a/34862475
(cd "${HOME}/backup" && ls -tp | grep -v '/$' | tail -n +6 | xargs -I {} sh -c 'echo "Removing {}" && rm -- {}')
{{ end -}}
